<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper      
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"      
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="member">

<!--회원등록-->
<insert id="register" parameterType="MemberVo">
insert into users(id, name, password, email,email2 ,roadAddress,jibunAddress, phone1,phone2,phone3, addressDetail, birthday,gender) values(#{id}, #{name}, #{password}, #{email},
#{email2}, #{roadAddress}, #{jibunAddress}, #{phone1}, #{phone2}, #{phone3} ,#{addressDetail}, #{birthday},#{gender})
</insert>
<!--사진/파일업로드-->
<update id="fileUpload" parameterType="MemberVo">
    update users set photo=#{photo} where id = #{id};
    <if test="photos != null">
        insert into photos(id, oriPhoto, photo) values
        <foreach collection="photos" item="p" separator=",">
            (#{id}, #{p.oriPhoto}, #{p.photo})
        </foreach>
    </if>   
</update>
<!--일반로그인-->
<select id="login" parameterType="String" resultType="MemberVo">
    <!-- select * from users where id like '%${id}%' or name like '%${name}%'  -->
    select * from users where id=#{_parameter}
</select>
<!-- 아이디 중복확인 -->
<select id="userIdchk" parameterType="String" resultType="MemberVo">
    select id from users where id = #{id}
</select>
<!--mail로 받은 비번 로그인-->
<select id="loginForgot" parameterType="map" resultType="MemberVo">
    select * from users where id = #{id} and password = #{password}
</select>
<select id="takeInfo" parameterType="MemberVo" resultType="MemberVo">
    select * from users where birthday = #{birthday} and name = #{name}
</select>
<select id="photos" parameterType="String" resultType="PhotoVo">
    select sno, photo, oriPhoto, flag, nal from photos where id=#{_parameter}
</select>
<!--이름가져오기-->
<select id="getName" parameterType="String" resultType="String">
    select name from users where id=#{id}
</select>
<!--개인정보가져오기-->
<select id="userId" parameterType="String" resultType="MemberVo">
    select * from users where id=#{id}
</select>
<!--리스트에서 검색-->
<select id="search" parameterType="String" resultType="MemberVo">
    select * from users where id like '%${_parameter}%' or name like '%${_parameter}%' or addressDetail like '%${_parameter}%' or roadAddress like '%${_parameter}%' or jibunAddress like '%${_parameter}%' or phone1 like '%${_parameter}%' or phone2 like '%${_parameter}%' or phone3 like '%${_parameter}%'
</select>
<!--대표이미지-->
<update id="changePhoto" parameterType="map">
    update users set photo=#{photo} where id=#{id}
</update>
<!--default이미지 가져오기-->
<select id="defaultPhoto" resultType="PhotoVo">
    select * from photos where sno = 5
</select>
<!--sns naver 아이디 등록-->
<update id="snsId" parameterType="MemberVo">
    update users set naverId = #{naverId} where birthday = #{birthday} and name = #{name} 
</update>
<!--sns kakao 아이디 등록-->
<update id="snskId" parameterType="MemberVo">
    update users set kakaoId = #{kakaoId} where birthday = #{birthday} and name = #{name} 
</update>
<!--회원 정보 수정 비밀번호 포함-->
<update id="updateWithPassword" parameterType="MemberVo">
    update users set phone1=#{phone1}, phone2=#{phone2}, phone3=#{phone3}, roadAddress = #{roadAddress}, jibunAddress = #{jibunAddress}, addressDetail=#{addressDetail}, password=#{password} where id=#{id};
    
</update>
<!--회원 정보 수정-->
<update id="update" parameterType="MemberVo">
    update users set phone1=#{phone1}, phone2=#{phone2}, phone3=#{phone3}, roadAddress = #{roadAddress}, jibunAddress = #{jibunAddress}, addressDetail=#{addressDetail} where id=#{id};
    
</update>
<select id="code" parameterType="String" resultType="MemberManagerVo">
    select * from  manager where mcode = #{mcode}
</select>
<select id="list" resultType="MemberVo">
    select * from users 
</select>
<!--비번 찾기-->
<select id="findPass" parameterType="map" resultType="MemberVo">
select id , password from users where name=#{name} and email = #{email1} and email2 =#{email2}
</select>
<delete id="delete_files" parameterType="java.util.List">
    delete from photos where oriphoto in <foreach collection="list" item="file" open="(" close=")" separator=",">
    #{file}
</foreach>
</delete>
<!-- 회원탈퇴-->
<delete id="memberDelete" parameterType="String">
    delete from users where id = #{_parameter};
    delete from photos where id = #{_parameter};
</delete> 
<!-- board -->
<!--상세보기-->
<select id="boardDetail" parameterType="Integer" resultType="BoardVo">
    select * from board where sno = #{_parameter}
</select>
<select id="attFiles" parameterType="Integer" resultType="BoardAtt">
    select sno,pSno, orifile, sysfile from boardatt where psno = #{_parameter}
</select>

<select id="boardSearch" parameterType="PageOther" resultType="BoardVo">
    select sno, id, hit, date_format(nal, '%Y-%m-%d') nal,
    concat(lpad('└', deep*12, <![CDATA['&nbsp;&nbsp;']]>),' ',  subject) subject
    from board
    where subject   like '%${findStr}%'
    or    doc       like '%${findStr}%'
    or    id        like '%${findStr}%'
    order by grp desc, seq asc
    limit #{startNo}, #{listSize}
</select>
<!--register, update, repl-->
<insert id="registerAtt" parameterType="Map">
    insert into boardatt(psno, orifile, sysfile) values
    <foreach collection="files" item="p" separator=",">
        (#{psno},#{p.oriFile},#{p.sysFile})
    </foreach>
</insert>
<!--등록-->
<insert id="boardRegisterR" parameterType="BoardVo">
    insert into board(id, subject, doc, nal, hit, sno, grp, seq, deep, psno)
    values(#{id}, #{subject}, #{doc}, now(), 0, #{sno}, #{grp}, #{seq}, #{deep}, #{psno})
</insert>
<!--조회수 증가-->
<update id="hitplus" parameterType="Map">
    update board set hit=#{phit} where sno = #{sno}
</update>
<!--getserial-->
<select id="getSerial" resultType="Integer">
    select getSerial('i')
</select>
<select id="totSize" parameterType="String" resultType="Integer">
    select count(sno) from board where subject like '%${_parameter}%'
    or doc like '%${_parameter}%' or id like '%${_parameter}'
</select>
<update id="boardUpdater" parameterType="BoardVo">
    update board set subject=#{subject}, doc=#{doc}
    where sno=#{sno};
</update>
<update id="seq_up" parameterType="BoardVo">
    update board set seq=seq+1 where seq > #{seq} and grp=#{grp}
</update>
<!--삭제-->
<select id="select_delfiles" parameterType="Integer" resultType="String">
    select sysFile from boardatt where pSno=#{_parameter}
</select>
<delete id="boardDelete" parameterType="Integer">
    delete from board where sno = #{_parameter}
</delete>
<delete id="delete_boardAtt" parameterType="Integer">
    delete from boardatt where pSno = #{_parameter}
</delete>
<delete id="boardDelete_files" parameterType="java.util.List">
    delete from boardatt where sysFile in <foreach collection="list" item="file" 
    open="(" close=")" separator="," > #{file}</foreach>
</delete>

<!--쇼핑-->
<!--상품등록-->
<insert id="goodsRegister" parameterType="GoodsVo">
    insert into goods(goodsName, goodsPrice) values(#{goodsName},#{goodsPrice})
</insert>
<insert id="goodsRegisterPhoto" parameterType="Map">
    insert into productphoto(goodsName,orifile,sysfile) values
    <foreach collection="photos" item="p" separator=",">
        (#{name},#{p.orifile},#{p.sysfile})
    </foreach>
</insert>
<!--불러오기-->
<select id="goodsBri" resultType="GoodsVo">
    select * from goods
</select>
<select id="getprice" parameterType="String" resultType="Integer" >
    select goodsprice from goods where goodsName = #{goodsName}
</select>
<select id="goodsPhotoBri" resultType="ProductPhoto">
    select * from productPhoto
</select>
<insert id="addCodeUserOrder" parameterType="Map">
    insert into userorder(id, orderCode) values(#{id}, #{order})
   
</insert>
<insert id="cartAdd"  parameterType="Map">
    insert into goodscart(ordercode, goodsName,goodsPrice) values (#{code}, #{name},#{price})
 
</insert>
<select id="getOrderCode" parameterType="String" resultType="UserOrder">
    select * from userorder where id = #{_parameter}
</select>
<update id="changeOrdered" parameterType="Map">
    update userorder set ordered = #{change} where orderCode = #{orderCode}
</update>
<select id="getGoodsVoList" parameterType="String" resultType="GoodsVo">
    select goodsName, goodsprice from goodscart where ordercode = #{_parameter}
</select>
</mapper>
